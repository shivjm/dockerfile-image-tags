on:
  push:
    branches:
      - main

name: release

env:
  GO: 1.16.5
  PACKAGE: dockerfile-image-tags

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v2
        id: release
        with:
          release-type: go
          package-name: ${{ env.PACKAGE }}
      - uses: actions/checkout@v2
        with:
          depth: 0
        if: ${{ steps.release.outputs.release_created }}
      - name: Tag major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO }}
        if: ${{ steps.release.outputs.release_created }}
      - name: Build all versions
        env:
          CGO_ENABLED: 0
          GOARCH: amd64
        run: |
          OS_LIST=("linux" "windows" "darwin")
          for os in ${OS_LIST[@]}; do
            output_path=build/${{ env.PACKAGE }}-amd64-$os

            if [[ $os -eq "windows" ]]; then
              output_path="$output_path.exe"
            fi

            GOOS=$os go build -tags netgo -o $output_path .
          done
        if: ${{ steps.release.outputs.release_created }}
      - name: Upload assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd build
          gh release upload ${{ steps.release.outputs.name }} ./*
        if: ${{ steps.release.outputs.release_created }}
