on:
  workflow_dispatch:
    inputs:
      push:
        description: "Whether to publish images to GHCR"
        required: true
        type: boolean
      tags:
        description: "List of tags to apply to images (separated by newlines or commas)"
        required: true
        type: string
      version:
        description: "Version string to compile into program"
        required: true
        type: string
  workflow_call:
    inputs:
      push:
        description: "Whether to publish images to GHCR"
        required: true
        type: string
      tags:
        description: "List of tags to apply to images (separated by newlines or commas)"
        required: true
        type: string
      version:
        description: "Version string to compile into program"
        required: true
        type: string

env:
  image: ghcr.io/shivjm/dockerfile-image-tags

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: ${{ (github.event.inputs.push == "true") || (inputs.push == true) }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.image }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: actions/checkout@v2
      - name: Get revision
        id: revision
        run: |
          echo "::set-output name=revision::$(git rev-parse --short HEAD)"
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          build-args: |
            VERSION=${{ github.event.inputs.version || inputs.version }}
            REVISION=${{ steps.revision.outputs.revision }}
          cache-from: type=registry,ref=${{ env.image }}
          cache-to: type=inline
          tags: ${{ github.event.inputs.tags || inputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ (github.event.inputs.push == "true") || (inputs.push == true) }}
